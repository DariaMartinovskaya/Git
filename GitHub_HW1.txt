GITHub. Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON: Web Git Hub > "Repositories" Tab > [New] Button > Repository Name "JSON" > Click "Add a REDMI file" > [Create repository"] Button
 5. Клонировать репозиторий JSON на локальный компьютер: git clone "https://github.com/DariaMartinovskaya/JSON.git"
 6. Внутри локального JSON создать файл “new.json”: touch new.json
 7. Добавить файл под гит: git add new.json
 8. Закоммитить файл: git commit -m new.json
 9. Отправить файл на внешний GitHub репозиторий: git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: vim new.json > i (edit mode) > {Input data} > "esc" + ":wq" + "Enter" 
 11. Отправить изменения на внешний репозиторий: git commit -am + git push
 12. Создать файл preferences.json: touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON: vim preferences.json > i (edit mode) > {Input data} > "esc" + ":wq" + "Enter"
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON: touch skills.json + vim skills.json > i (edit mode) > [Input data] > "esc" + ":wq" + "Enter"
 15. Отправить сразу 2 файла на внешний репозиторий: git add . && git commit -m "2Files" + git push
 16. На веб интерфейсе создать файл bug_report.json: Web Git Hub > Repositories > "JSON" > Click [Add file] Button > Choose "Create new file" > Name of the file: "bug_report.json" 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: [Commit changes...] Button > [Commit changes] Button
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON: Choose bug_report.json > Edit this file button 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: [Commit changes...] Button > [Commit changes] Button
 20. Синхронизировать внешний и локальный репозиторий JSON: git pull


XML
 21. Создать внешний репозиторий c названием XML: Web Git Hub > "Repositories" Tab > [New] Button > Repository Name "XML" > Click "Add a REDMI file" > [Create repository"] Button
 22. Клонировать репозиторий XML на локальный компьютер: git clone https://github.com/DariaMartinovskaya/XML.git
 23. Внутри локального XML создать файл “new.xml”: touch new.xml
 24. Добавить файл под гит: git add new.xml
 25. Закоммитить файл: git commit -m new.xml
 26. Отправить файл на внешний GitHub репозиторий: git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML: vim new.xml > i (edit mode) > {Input data} > "esc" + ":wq" + "Enter" 
 28. Отправить изменения на внешний репозиторий: git add new.xml + git commit -m new.xml + git push
 29. Создать файл preferences.xml: touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML: vim preferences.xml > i (edit mode) > {Input data} > "esc" + ":wq" + "Enter"
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML: touch skills.xml > vim skills.xml > i (edit mode) > {Input data} > "esc" + ":wq" + "Enter" 
 32. Сделать коммит в одну строку: git add . && git commit -m "comment" 
 33. Отправить сразу 2 файла на внешний репозиторий: git push
 34. На веб интерфейсе создать файл bug_report.xml: Web Git Hub > Repositories > "XML" > Click [Add file] Button > Choose "Create new file" > Name of the file: "bug_report.xml"
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе:[Commit changes...] Button > [Commit changes] Button
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML: Choose bug_report.xml > Edit this file button
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе: [Commit changes...] Button > [Commit changes] Button
 38. Синхронизировать внешний и локальный репозиторий XML: git pull

TXT
 1. Создать внешний репозиторий c названием TXT:  Web Git Hub > "Repositories" Tab > [New] Button > Repository Name "TXT" > Click "Add a REDMI file" > [Create repository"] Button
 2. Клонировать репозиторий TXT на локальный компьютер: git clone https://github.com/DariaMartinovskaya/TXT.git
 3. Внутри локального TXT создать файл “new.txt”: touch new.txt
 4. Добавить файл под гит: git add new.txt
 5. Закоммитить файл: git commit -m new.txt
 6. Отправить файл на внешний GitHub репозиторий: git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT: cat > "Input data" > Ctrl + C
 8. Отправить изменения на внешний репозиторий: git add new.txt + git commit -m new.txt + git push
 9. Создать файл preferences.txt: touch references.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT: cat > preferences.txt > "Input data" > Ctrl + C
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT: touch skills.txt; cat > touch.txt > "Input data" > Ctrl + C
 12. Сделать коммит в одну строку: git add . && git commit -m "2Files" 
 13. Отправить сразу 2 файла на внешний репозиторий: git push
 14. На веб интерфейсе создать файл bug_report.txt: Web Git Hub > Repositories > "XML" > Click [Add file] Button > Choose "Create new file" > Name of the file: "bug_report.txt"
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе: [Commit changes...] Button > [Commit changes] Button
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT: Choose bug_report.txt > Edit this file button
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: [Commit changes...] Button > [Commit changes] Button
 18. Синхронизировать внешний и локальный репозиторий TXT: git pull

=============
Основные команды:
cd Git_intro
git clone https://github.com/DariaMartinovskaya/Terminal.git - создание копии (удаленного) репозитория
git add X.txt (добавление файла в область подготовленнных файлов)
git add . (отправить всё)
git status - отображение состояния рабочего каталога
git commit -m - сохранение версий ("замораживание историй"), где "-m" означает "message" (=комментарий)
git push - отправка локальной ветки на удаленный репозиторий
git commit -a -m (в одну команду можно, если файл "modified")
vim new.json. i - edit, esc + :wq - exit from edit mode
git pull - синхронизация внешнего и локального репозитория
git merge --abort - прерывание процесса слияния и восстановление конфликтующих файлов до стабильного состояния
git reset - восстановление конфликтующи файлов до стабильного состояния
